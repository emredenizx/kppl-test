[{"C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\index.js":"1","C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\reportWebVitals.js":"2","C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\App.js":"3","C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\components\\Section\\index.js":"4","C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\components\\Section\\Section.js":"5","C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\components\\mock-data.js":"6","C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\api\\api.config.js":"7","C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\components\\mock-options.js":"8","C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\components\\Line\\index.js":"9","C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\components\\Line\\Line.js":"10","C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\utils\\index.js":"11","C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\components\\Element\\index.js":"12","C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\components\\Element\\Element.js":"13","C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\components\\Options\\index.js":"14","C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\components\\Options\\Options.js":"15"},{"size":478,"mtime":1611976979523,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1606741828331,"results":"18","hashOfConfig":"17"},{"size":179,"mtime":1611965605169,"results":"19","hashOfConfig":"17"},{"size":56,"mtime":1611849441277,"results":"20","hashOfConfig":"17"},{"size":1082,"mtime":1611970734290,"results":"21","hashOfConfig":"17"},{"size":4716,"mtime":1611849629508,"results":"22","hashOfConfig":"17"},{"size":454,"mtime":1611886608727,"results":"23","hashOfConfig":"17"},{"size":1192,"mtime":1611976314490,"results":"24","hashOfConfig":"17"},{"size":48,"mtime":1611935380324,"results":"25","hashOfConfig":"17"},{"size":2362,"mtime":1611962368147,"results":"26","hashOfConfig":"17"},{"size":428,"mtime":1611975483306,"results":"27","hashOfConfig":"17"},{"size":56,"mtime":1611968269656,"results":"28","hashOfConfig":"17"},{"size":1575,"mtime":1611984385844,"results":"29","hashOfConfig":"17"},{"size":56,"mtime":1611971794135,"results":"30","hashOfConfig":"17"},{"size":1258,"mtime":1611984343595,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"adn0uj",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\index.js",[],["65","66"],"C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\reportWebVitals.js",[],"C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\App.js",[],"C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\components\\Section\\index.js",[],"C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\components\\Section\\Section.js",[],"C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\components\\mock-data.js",[],"C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\api\\api.config.js",[],"C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\components\\mock-options.js",[],"C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\components\\Line\\index.js",[],["67","68"],"C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\components\\Line\\Line.js",["69","70"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { getSuggestions, mock_suggestions } from \"../../api/api.config\";\r\n\r\nimport styles from './Line.module.css'\r\n\r\nconst Line = ({ line }) => {\r\n\r\n  const { data } = line;\r\n  const [options, setOptions] = useState(null)\r\n  const [optionText, setOptionText] = useState([])\r\n\r\n\r\n\r\n  /* const getData = useCallback(() => {\r\n    const data = element.data.map(element => structure.find((item) => item.id === element));\r\n    setData({\r\n      ...element,\r\n      elements: data\r\n    })\r\n  }, [element, structure])\r\n\r\n  useEffect(() => {    \r\n    getData()\r\n  }, [getData])\r\n\r\n  console.log('elements', data) */\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      data.forEach(element => {\r\n        if (element.original.want) {\r\n          const params = {\r\n            \"want\": element.original.want,\r\n            \"active\": ['']\r\n          }\r\n\r\n          const response = mock_suggestions(params)\r\n          const options = response;\r\n\r\n          setOptions(prev => ({\r\n            ...prev,\r\n            [element.original.id]: options\r\n          }))\r\n\r\n        } else {\r\n          return\r\n        }\r\n\r\n      });\r\n    }\r\n  }, [data])\r\n\r\n  const onClick = (name) => {\r\n    setOptionText([...optionText, {\r\n      data:{\r\n      data:[''],\r\n      properties: { name },\r\n      type: 'text'}\r\n    }])\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        {\r\n          data && data.map(element =>\r\n            <div\r\n              className={styles.element}\r\n              key={element.id}>\r\n              <h2 className='label'>\r\n                {element.properties.name}\r\n              </h2>\r\n              {options && options[element.original.id] &&\r\n                <div className={styles.options}>\r\n                  <ul>\r\n                    {options[element.original.id].map(option =>\r\n                      <li\r\n                        key={option.id}\r\n                        onClick={() => onClick(option.name)}\r\n                      >\r\n                        {option.name}\r\n                      </li>\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n              }\r\n              {optionText && optionText.map(option => <Line line={option} />)}\r\n            </div>)\r\n        }\r\n      </div>\r\n      <div></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Line;\r\n","C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\utils\\index.js",[],"C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\components\\Element\\index.js",[],"C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\components\\Element\\Element.js",[],"C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\components\\Options\\index.js",[],"C:\\Users\\riddle\\MyApps\\kappa-london-test\\src\\components\\Options\\Options.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"71","replacedBy":"75"},{"ruleId":"73","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":28},{"ruleId":"77","severity":1,"message":"81","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":24},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],["82"],["83"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'getSuggestions' is defined but never used.","no-global-assign","no-unsafe-negation"]